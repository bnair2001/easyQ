{"ast":null,"code":"var _jsxFileName = \"/home/retr0/Documents/Projects/easyQ-v2/client-agent/src/components/DashBoard.js\";\nimport React, { Component } from \"react\";\nimport { Button, Container } from \"reactstrap\";\nimport StarRatingComponent from \"react-star-rating-component\";\nimport Slider from \"react-rangeslider\";\nimport { Emojione } from \"react-emoji-render\";\nimport axios from \"axios\";\nexport default class DashBoard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rating: 0,\n      value: 0,\n      isCompleted: false,\n      ticket: {}\n    };\n\n    this.getTicket = async () => {\n      let res;\n\n      try {\n        res = await axios.post(\"/getTicket\", {\n          agentId: localStorage.getItem(\"userData\")\n        });\n      } catch (error) {\n        console.log(error.message);\n      }\n\n      if (res.data !== {}) {\n        console.log(res.data);\n        this.setState({\n          ticket: res.data\n        });\n      } else {\n        this.setState({\n          ticket: {\n            empty: true\n          }\n        });\n      }\n    };\n\n    this.onStarClick = (nextValue, prevValue, name) => {\n      this.setState({\n        rating: nextValue\n      });\n    };\n\n    this.onPress = e => {\n      localStorage.removeItem(\"userData\");\n      this.props.history.push(\"/\");\n    };\n\n    this.handleChange = e => {\n      console.log(\"change\");\n    };\n\n    this.handleChangeStart = () => {\n      console.log(\"Change event started\");\n    };\n\n    this.handleChange = value => {\n      this.setState({\n        value: value\n      });\n    };\n\n    this.handleChangeComplete = async () => {\n      try {\n        console.log(this.state.ticket.id);\n        await axios.post(\"/makeCompleteUpdate\", {\n          rating: this.state.rating,\n          mood: this.state.value,\n          id: this.state.ticket.tid\n        });\n      } catch (error) {\n        console.log(error.message);\n      }\n\n      console.log(\"Change event completed\");\n    };\n\n    this.handleComplete = () => {\n      this.setState({\n        isCompleted: true\n      });\n    };\n\n    this.handleCompleteNext = () => {\n      console.log(\"Next!!\");\n      this.getTicket();\n      this.setState({\n        rating: 0,\n        value: 0\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (!localStorage.getItem(\"userData\")) {\n      this.props.history.push(\"/\");\n    }\n\n    this.getTicket();\n    console.log(this.state);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.onPress,\n      type: \"submit\",\n      className: \"center-div2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Logout\"), React.createElement(\"div\", {\n      className: \"center-div3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"user-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Token\"), this.state.ticket.empty && React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"No one left\"), React.createElement(\"span\", {\n      className: \"dot\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, this.state.ticket.id), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, this.state.ticket.first), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, this.state.ticket.purpose)), React.createElement(\"h5\", {\n      className: \"heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Customer rating and mood:\"), React.createElement(\"div\", {\n      className: \"slider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Slider, {\n      min: 0,\n      max: 100,\n      value: this.state.value,\n      onChangeStart: this.handleChangeStart,\n      onChange: this.handleChange,\n      onChangeComplete: this.handleChangeComplete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(Emojione, {\n      text: \":rage:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(Emojione, {\n      text: \":grinning:\",\n      className: \"grin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })), React.createElement(StarRatingComponent, {\n      className: \"rating\",\n      name: \"rate1\",\n      starCount: 10,\n      value: this.state.rating,\n      onStarClick: this.onStarClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), !this.state.isCompleted && React.createElement(Button, {\n      color: \"primary\",\n      className: \"finalBut\",\n      onClick: this.handleComplete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \" \", \"Completed\", \" \"), this.state.isCompleted && React.createElement(Button, {\n      color: \"success\",\n      className: \"finalBut\",\n      onClick: this.handleCompleteNext,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \" \", \"Next\", \" \"))));\n  }\n\n}","map":{"version":3,"sources":["/home/retr0/Documents/Projects/easyQ-v2/client-agent/src/components/DashBoard.js"],"names":["React","Component","Button","Container","StarRatingComponent","Slider","Emojione","axios","DashBoard","state","rating","value","isCompleted","ticket","getTicket","res","post","agentId","localStorage","getItem","error","console","log","message","data","setState","empty","onStarClick","nextValue","prevValue","name","onPress","e","removeItem","props","history","push","handleChange","handleChangeStart","handleChangeComplete","id","mood","tid","handleComplete","handleCompleteNext","componentDidMount","render","first","purpose"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Container } from \"reactstrap\";\nimport StarRatingComponent from \"react-star-rating-component\";\nimport Slider from \"react-rangeslider\";\nimport { Emojione } from \"react-emoji-render\";\nimport axios from \"axios\";\n\nexport default class DashBoard extends Component {\n  state = {\n    rating: 0,\n    value: 0,\n    isCompleted: false,\n    ticket: {}\n  };\n\n  getTicket = async () => {\n    let res;\n    try {\n      res = await axios.post(\"/getTicket\", {\n        agentId: localStorage.getItem(\"userData\")\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n    if (res.data !== {}) {\n      console.log(res.data);\n      this.setState({ ticket: res.data });\n    } else {\n      this.setState({ ticket: { empty: true } });\n    }\n  };\n\n  onStarClick = (nextValue, prevValue, name) => {\n    this.setState({ rating: nextValue });\n  };\n\n  onPress = e => {\n    localStorage.removeItem(\"userData\");\n    this.props.history.push(\"/\");\n  };\n  componentDidMount() {\n    if (!localStorage.getItem(\"userData\")) {\n      this.props.history.push(\"/\");\n    }\n    this.getTicket();\n    console.log(this.state);\n  }\n\n  handleChange = e => {\n    console.log(\"change\");\n  };\n\n  handleChangeStart = () => {\n    console.log(\"Change event started\");\n  };\n\n  handleChange = value => {\n    this.setState({\n      value: value\n    });\n  };\n\n  handleChangeComplete = async () => {\n    try {\n      console.log(this.state.ticket.id);\n      await axios.post(\"/makeCompleteUpdate\", {\n        rating: this.state.rating,\n        mood: this.state.value,\n        id: this.state.ticket.tid\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n\n    console.log(\"Change event completed\");\n  };\n\n  handleComplete = () => {\n    this.setState({ isCompleted: true });\n  };\n\n  handleCompleteNext = () => {\n    console.log(\"Next!!\");\n    this.getTicket();\n    this.setState({ rating: 0, value: 0 });\n  };\n  render() {\n    return (\n      <div>\n        <Container>\n          <Button\n            color=\"primary\"\n            onClick={this.onPress}\n            type=\"submit\"\n            className=\"center-div2\"\n          >\n            Logout\n          </Button>\n          <div className=\"center-div3\">\n            <div className=\"user-details\">\n              <h5>Token</h5>\n              {this.state.ticket.empty && <h5>No one left</h5>}\n              <span className=\"dot\">{this.state.ticket.id}</span>\n              <h5>{this.state.ticket.first}</h5>\n              <h5>{this.state.ticket.purpose}</h5>\n            </div>\n            <h5 className=\"heading\">Customer rating and mood:</h5>\n\n            <div className=\"slider\">\n              <Slider\n                min={0}\n                max={100}\n                value={this.state.value}\n                onChangeStart={this.handleChangeStart}\n                onChange={this.handleChange}\n                onChangeComplete={this.handleChangeComplete}\n              />\n\n              <Emojione text=\":rage:\" />\n              <Emojione text=\":grinning:\" className=\"grin\" />\n            </div>\n            <StarRatingComponent\n              className=\"rating\"\n              name=\"rate1\"\n              starCount={10}\n              value={this.state.rating}\n              onStarClick={this.onStarClick}\n            />\n            {!this.state.isCompleted && (\n              <Button\n                color=\"primary\"\n                className=\"finalBut\"\n                onClick={this.handleComplete}\n              >\n                {\" \"}\n                Completed{\" \"}\n              </Button>\n            )}\n            {this.state.isCompleted && (\n              <Button\n                color=\"success\"\n                className=\"finalBut\"\n                onClick={this.handleCompleteNext}\n              >\n                {\" \"}\n                Next{\" \"}\n              </Button>\n            )}\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}