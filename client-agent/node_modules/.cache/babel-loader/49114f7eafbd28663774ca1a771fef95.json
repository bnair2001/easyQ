{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = unicodeToCodepoint; // avoid runtime RegExp creation for not so smart,\n// not JIT based, and old browsers / engines\n// https://github.com/twitter/twemoji/blob/gh-pages/2/twemoji.js#L232\n\nvar UFE0Fg = /\\uFE0F/g; // \\u200D is a zero-width joiner character\n// https://github.com/twitter/twemoji/blob/gh-pages/2/twemoji.js#L235\n\nvar U200D = String.fromCharCode(0x200d); // convert utf16 into code points\n\nfunction toCodePoint(input) {\n  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"-\";\n  var codePoints = [];\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = input[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var codePoint = _step.value;\n      codePoints.push(codePoint.codePointAt(0).toString(16));\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return codePoints.join(separator);\n}\n\nfunction unicodeToCodepoint(input) {\n  return toCodePoint(input.indexOf(U200D) < 0 ? input.replace(UFE0Fg, \"\") : input);\n}","map":null,"metadata":{},"sourceType":"script"}