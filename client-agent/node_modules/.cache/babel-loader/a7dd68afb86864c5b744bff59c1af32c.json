{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function () {\n  return new RegExp(\"(\" + edgeCases + \")?(\" + names + \")((?!(\" + edgeCases + \"))[a-z0-9_\\\\-\\\\+]+:)?\", \"g\");\n};\n\nvar _asciiAliases = require(\"../data/asciiAliases\");\n\nvar _asciiAliases2 = _interopRequireDefault(_asciiAliases);\n\nvar _lodash = require(\"lodash.flatten\");\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction quoteRE(str) {\n  return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, \"\\\\$&\");\n}\n\nvar names = (0, _lodash2.default)(Object.keys(_asciiAliases2.default).map(function (name) {\n  return _asciiAliases2.default[name].map(function (alias) {\n    return quoteRE(alias);\n  });\n})).join(\"|\");\nvar edgeCases = [\"http\", \"https\"].join(\"|\"); // Regex reads as following:\n//\n// Match ascii aliases with optional edge cases before it (to know if parsing is needed)\n// Additionally, after the ascii alias:\n//    - Forbid edge cases\n//    - Allow characters included in normal aliases (to check later cases like :s and :smile:)","map":null,"metadata":{},"sourceType":"script"}